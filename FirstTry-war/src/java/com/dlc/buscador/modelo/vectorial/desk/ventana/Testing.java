package com.dlc.buscador.modelo.vectorial.desk.ventana;

import com.dlc.buscador.modelo.vectorial.proceso.*;
import java.io.*;
import java.util.*;
import javax.swing.*;
import javax.swing.filechooser.*;

/**
 *
 * @author nicolashefty
 */
public class Testing extends javax.swing.JFrame
{

    /**
     * Creates new form Testing
     */
    public Testing()
    {
        initComponents();
    }

    ArrayList<File> Archivos = new ArrayList<>();

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        btn_limpiar = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        mensaje_estado = new javax.swing.JLabel();
        barra_porcentaje = new javax.swing.JProgressBar();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        ListadoArchivos = new javax.swing.JList();
        btn_agregar_archivo = new javax.swing.JButton();
        btn_salir = new javax.swing.JButton();
        btn_procesar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btn_limpiar.setText("Limpiar selección");
        btn_limpiar.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btn_limpiarActionPerformed(evt);
            }
        });

        jLabel2.setText("Estado");

        mensaje_estado.setText("Sin comenzar.");

        jLabel1.setText("Listado de archivos a analizar");

        ListadoArchivos.setModel(new DefaultListModel());
        ListadoArchivos.setToolTipText("");
        jScrollPane1.setViewportView(ListadoArchivos);

        btn_agregar_archivo.setText("Agregar archivo");
        btn_agregar_archivo.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btn_agregar_archivoActionPerformed(evt);
            }
        });

        btn_salir.setText("Salir");
        btn_salir.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btn_salirActionPerformed(evt);
            }
        });

        btn_procesar.setText("Pocesar selección");
        btn_procesar.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btn_procesarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btn_salir)
                                .addGap(154, 154, 154))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btn_limpiar)
                            .addComponent(btn_procesar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btn_agregar_archivo, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(mensaje_estado)
                    .addComponent(barra_porcentaje, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addContainerGap(38, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(btn_agregar_archivo)
                                    .addComponent(mensaje_estado))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btn_procesar))
                            .addComponent(barra_porcentaje, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btn_limpiar)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 44, Short.MAX_VALUE)
                .addComponent(btn_salir)
                .addGap(23, 23, 23))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_limpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_limpiarActionPerformed
        limpiarArchivos();
    }//GEN-LAST:event_btn_limpiarActionPerformed

    private void btn_agregar_archivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_agregar_archivoActionPerformed
        AgregarArchivoALista();
    }//GEN-LAST:event_btn_agregar_archivoActionPerformed

    private void btn_salirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_salirActionPerformed
        System.exit(0);
    }//GEN-LAST:event_btn_salirActionPerformed

    private void btn_procesarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_procesarActionPerformed
        // TODO add your handling code here:

        if (Archivos.isEmpty())
        {
            JOptionPane.showMessageDialog(null, "Es necesario seleccionar al menos un archivo a analizar. ");
            return;
        }

        Desactivar(false);

        SwingWorker worker = new SwingWorker()
        {
            @Override
            protected Object doInBackground() throws Exception
            {
                int procesado = 0;

                Procesar procesar = new Procesar();

                for (File archivo : Archivos)
                {
                    int porcentaje = procesado * 80 / Archivos.size();

                    String name = archivo.getName();

                    mensaje_estado.setText("Procesando " + name + " ....");
                    barra_porcentaje.setValue(porcentaje);

                    try
                    {
                        procesar.ejecutar(archivo);
                    }
                    catch (Exception e)
                    {
                        JOptionPane.showMessageDialog(null, "Error al analizar los archivos. Proceso abortado. ");
                        JOptionPane.showMessageDialog(null, "Fallo el archivo " + name);

                        System.out.println(e.getMessage());
                        System.out.println(Arrays.toString(e.getStackTrace()));

                        mensaje_estado.setText("Abortado.");
                        barra_porcentaje.setValue(0);
                        break;
                    }

                    procesado++;
                }

                barra_porcentaje.setValue(80);
                mensaje_estado.setText("Actualizando datos...");

                procesar.actualizar();

                barra_porcentaje.setValue(90);
                mensaje_estado.setText("Guardando datos...");

                try
                {
                    procesar.finalizar();
                    mensaje_estado.setText("Finalizado.");
                    barra_porcentaje.setValue(100);
                }
                catch (Exception e)
                {
                    JOptionPane.showMessageDialog(null, "Error al guardar los cambios. Proceso abortado. ");
                    mensaje_estado.setText("Abortado.");
                    barra_porcentaje.setValue(0);
                }

                limpiarArchivos();
                Desactivar(true);
                return null;
            }

        };

        worker.execute();
    }//GEN-LAST:event_btn_procesarActionPerformed

    private void limpiarArchivos()
    {
        Archivos.clear();
        DefaultListModel ls = (DefaultListModel) ListadoArchivos.getModel();
        ls.clear();
    }

    private void AgregarArchivoALista()
    {
        JFileChooser selector = new JFileChooser();
        selector.setMultiSelectionEnabled(true);

        FileNameExtensionFilter filter = new FileNameExtensionFilter("TEXT FILES", "txt", "text");
        selector.setFileFilter(filter);

        int resultado = selector.showOpenDialog(this);

        if (resultado != JFileChooser.APPROVE_OPTION)
        {
            return;
        }

        File[] files = selector.getSelectedFiles();

        for (File file : files)
        {
            Archivos.add(file);
            DefaultListModel ls = (DefaultListModel) ListadoArchivos.getModel();

            ls.addElement(file.getName());
        }

    }

    private void Desactivar(boolean desactivar)
    {
        btn_agregar_archivo.setEnabled(desactivar);
        btn_procesar.setEnabled(desactivar);
        btn_limpiar.setEnabled(desactivar);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[])
    {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try
        {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
            {
                if ("Nimbus".equals(info.getName()))
                {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        }
        catch (ClassNotFoundException ex)
        {
            java.util.logging.Logger.getLogger(Testing.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        catch (InstantiationException ex)
        {
            java.util.logging.Logger.getLogger(Testing.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        catch (IllegalAccessException ex)
        {
            java.util.logging.Logger.getLogger(Testing.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        catch (javax.swing.UnsupportedLookAndFeelException ex)
        {
            java.util.logging.Logger.getLogger(Testing.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable()
        {
            public void run()
            {
                new Testing().setVisible(true);
            }

        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList ListadoArchivos;
    private javax.swing.JProgressBar barra_porcentaje;
    private javax.swing.JButton btn_agregar_archivo;
    private javax.swing.JButton btn_limpiar;
    private javax.swing.JButton btn_procesar;
    private javax.swing.JButton btn_salir;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel mensaje_estado;
    // End of variables declaration//GEN-END:variables
}
